/* * To change this template, choose Tools | Templates * and open the template in the editor. */package com.buysell.servlets;import com.buysell.util.BuySellProperties;import com.buysell.util.ImagePathUtil;import com.buysell.webshop.util.DealerImagePathUtil;import java.io.File;import java.io.FileInputStream;import java.io.IOException;import java.io.OutputStream;import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.log4j.Logger;/** * * @author bbsadmin */public class ImageRender extends HttpServlet {    private static Logger LOG = Logger.getLogger(ImageRender.class);    String imgsrc = (String) BuySellProperties.getProperty("imgsrc");    ImagePathUtil ipu = new ImagePathUtil(imgsrc);    DealerImagePathUtil dipu = new DealerImagePathUtil(imgsrc);    /**      * Processes requests for both HTTP <code>GET</code> and <code>POST</code> methods.     * @param request servlet request     * @param response servlet response     * @throws ServletException if a servlet-specific error occurs     * @throws IOException if an I/O error occurs     */    protected void processRequest(HttpServletRequest request, HttpServletResponse response)            throws ServletException, IOException {        String fileName = request.getParameter("imf");        String fileNameD = request.getParameter("imd");        String contentType;        OutputStream os = response.getOutputStream();        //PrintWriter out = response.getWriter();//        LOG.debug(" Image request received for resource " + fileName);        FileInputStream in = null;        try {            if (fileName != null && fileName.trim().length() > 0) {                fileName = ipu.getImagePath(fileName);                File f = new File(fileName);                if (f != null) {                    contentType = getServletContext().getMimeType(f.getName());//                    LOG.debug(" Mime type for the resource is " + contentType);                    response.setContentType(contentType);                    in = new FileInputStream(f);                    int size = in.available();                    byte[] content = new byte[size];                    in.read(content);                    os.write(content);                }            }else if(fileNameD != null && fileNameD.trim().length() > 0){                fileNameD = dipu.getImagePath(fileNameD);                File f = new File(fileNameD);                if (f != null) {                    contentType = getServletContext().getMimeType(f.getName());//                    LOG.debug(" Mime type for the resource is " + contentType);                    response.setContentType(contentType);                    in = new FileInputStream(f);                    int size = in.available();                    byte[] content = new byte[size];                    in.read(content);                    os.write(content);                }            }        } catch (Exception e) {//            LOG.error("Exception is " + e);        } finally {            // out.close();            os.flush();            os.close();            if (in != null) {                in.close();            }        }    }    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">    /**      * Handles the HTTP <code>GET</code> method.     * @param request servlet request     * @param response servlet response     * @throws ServletException if a servlet-specific error occurs     * @throws IOException if an I/O error occurs     */    @Override    protected void doGet(HttpServletRequest request, HttpServletResponse response)            throws ServletException, IOException {        processRequest(request, response);    }    /**      * Handles the HTTP <code>POST</code> method.     * @param request servlet request     * @param response servlet response     * @throws ServletException if a servlet-specific error occurs     * @throws IOException if an I/O error occurs     */    @Override    protected void doPost(HttpServletRequest request, HttpServletResponse response)            throws ServletException, IOException {        processRequest(request, response);    }    /**      * Returns a short description of the servlet.     * @return a String containing servlet description     */    @Override    public String getServletInfo() {        return "Short description";    }// </editor-fold>}